#include <iostream>
using namespace std;

void siftDown(int a[], int i, int heapSize) {
    while (2 * i + 1 < heapSize) {
        int left = 2 * i + 1;
        int right = 2 * i + 2;
        int j = left;
        if (right < heapSize && a[right] > a[left]) {
            j = right;
        }
        if (a[i] <= a[j]) {
            break;
        }
        swap(a[i], a[j]);
        i = j;
    }
}
bool check(int n, int arr[]) {
    for (int i = n / 2 - 1; i >= 0; i--) {
        siftDown(arr, i, n);
    }
    for (int i = 1; i < n; i++) {
        if (arr[i] < arr[(i - 1) / 2]) {
            return false;
        }
    }
    return true;
}
int main() {
    int n;
    cin >> n;

    int arr[n];
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    bool res = check(n, arr);
    if (res) {
        cout << "YES" << endl;
    } else {
        cout << "NO" << endl;
    }
    return 0;
}
