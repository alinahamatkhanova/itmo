#include <iostream>
using namespace std;

void quicksort(long long arr[], long long low, long long high) {
    if (low < high) {
        long long pivot = arr[high]; long long i = low - 1;

        for (long long j = low; j < high; j++) {
            if (arr[j] > pivot || (arr[j] == pivot && j % 2 == 0)) {
                i++; swap(arr[i], arr[j]);
            }
        }
        swap(arr[i + 1], arr[high]);
        long long pi = i + 1;

        quicksort(arr, low, pi - 1); quicksort(arr, pi + 1, high);
    }
}
int main() {
    long long n;
    cin >> n;
    long long arr[n];

    for (long long i = 0; i < n; ++i)
        cin >> arr[i];
    if (n < 4) {
        cout << 0;
        return 0;
    }
    quicksort(arr, 0, n - 1);
    long long sum = 0; long long l = 0; long long tecush = -1;

    for (l = 0; l + 1 < n;) {
        if (arr[l] == arr[l + 1]) {
            if (tecush == -1) {
                tecush = arr[l]; l += 2;
            } else {
                sum += arr[l] * tecush; tecush = -1; l += 2;
            }
        } else if (arr[l] == arr[l + 1] + 1) {
            if (tecush == -1) {
                tecush = arr[l] - 1; l += 2;
            } else {
                sum += (arr[l] - 1) * tecush; tecush = -1; l += 2;
            }
        } else {
            l++;
        }
    }
    cout << sum;
    return 0;
}
